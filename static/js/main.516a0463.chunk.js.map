{"version":3,"sources":["components/Radar/index.js","components/Results/ExcelExport.js","components/Results/index.js","components/Device/index.js","components/Screen/index.js","components/List/index.js","App.js","serviceWorker.js","index.js"],"names":["Radar","size","window","innerWidth","points","pointerX","pointerY","maxTilt","maxRadius","degreesToCanvas","degree","parseInt","fixThreshold","height","width","style","margin","map","stroke","strokeWidth","tension","lineCap","preventDefault","x","y","radius","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","Download","results","button","pointsDataSet","columns","data","reduce","result","value","index","array","push","slice","element","name","label","dataSet","a","localForage","getItem","savedPoints","setItem","date","Date","alert","console","error","getOveralStabilityIndex","acc","Math","pow","parseFloat","sqrt","length","toPrecision","getOveralStabilityDesviation","magnitudeArr","arr","meanDeflection","desviationSum","getPosteriorStabilityIndex","getPosteriorStabilityDesviation","getLateralStabilityIndex","getLateralStabilityDesviation","Results","close","zonePercentage","pointsPerZone","magnitude","Object","assign","b","c","d","getZonePercentage","quadrantPercentage","pointsPerQuadrant","getQuadrantPercentage","osi","osd","api","apd","mli","mld","zpA","zpB","zpC","zpD","qpI","qpII","qpIII","qpIV","Modal","onClose","defaultOpen","Header","Content","image","min","innerHeight","Description","Actions","Button","color","onClick","content","labelPosition","icon","savePoints","positive","Device","props","radarSize","measureInterval","getPointer","event","beta","gamma","setState","orientation","state","cob","handleGetCenterOfBalance","interval","setInterval","measureFrequency","setTimeout","clearInterval","getCenterOfBalance","handleError","err","handleStartMeasure","isRunningMeasure","timerCount","initialTimer","counterInterval","handleStopMeasure","showResults","handleClearMeasure","handleGetMaxTilt","addEventListener","getMaxTilt","removeEventListener","max","handleChangeSeconds","e","target","handleShowQRScanner","peer","Peer","trickle","on","log","JSON","stringify","axios","post","qrData","res","answer","this","isConnectedToHUD","dataJson","parse","toString","run","runValue","showQRScanner","handleScan","signal","offer","handleConnectToDevice","history","dataToSend","send","delay","onError","onScan","Container","textAlign","fluid","Input","placeholder","onChange","React","Component","withRouter","Screen","initiator","process","getServerAnswer","isConnectedToDevice","dataReceived","option","includeMargin","handleSendRun","ResultList","useState","items","setItems","setPoints","useEffect","then","List","Item","toLocaleString","floated","celled","App","path","Boolean","location","hostname","match","rootEl","document","getElementById","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.516a0463.chunk.js","sourcesContent":["import React from 'react';\nimport { Stage, Layer, Line, Circle } from 'react-konva';\nimport './index.css';\n\nexport default function Radar({size = window.innerWidth, points, pointerX, pointerY, maxTilt }) {\n  const maxRadius = size/2;\n\n  function fixThreshold(degree) {\n    if (degree > maxTilt) return maxTilt;\n    if (degree < -maxTilt) return -maxTilt;\n    return degree;\n  }\n\n  function degreesToCanvas(degree) {\n    return parseInt(fixThreshold(degree) * (size / (maxTilt*2)) + (size / 2));\n  }\n\n  return (\n  <Stage\n    height={size}\n    width={size}\n  >\n    <Layer\n          style={{margin: 'auto'}}\n    >\n      <Line\n        points={points.map(degreesToCanvas)}\n        stroke=\"#df4b26\"\n        strokeWidth={5}\n        tension={0}\n        lineCap=\"round\"\n        preventDefault={false}\n      />\n      <Circle x={degreesToCanvas(pointerX)} y={degreesToCanvas(pointerY)} stroke=\"green\" radius={maxRadius/25} preventDefault={false}/>\n      <Circle x={size/2} y={size/2} stroke=\"black\" radius={maxRadius} preventDefault={false}/>\n      <Circle x={size/2} y={size/2} stroke=\"black\" radius={maxRadius/4*3} preventDefault={false}/>\n      <Circle x={size/2} y={size/2} stroke=\"black\" radius={maxRadius/2} preventDefault={false}/>\n      <Circle x={size/2} y={size/2} stroke=\"black\" radius={maxRadius/4} preventDefault={false}/>\n      <Circle x={size/2} y={size/2} stroke=\"black\" radius={1} preventDefault={false}/>\n      <Line points={[0,size/2, size, size/2]} stroke=\"black\" preventDefault={false}/>\n      <Line points={[size/2, 0, size/2, size]} stroke=\"black\" preventDefault={false}/>\n    </Layer>\n  </Stage>)\n}\n","import React from \"react\";\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nfunction Download({results, points, button}) {\n  const splitedPoints = points.reduce(function(result, value, index, array) {\n    if (index % 2 === 0)\n      result.push(array.slice(index, index + 2));\n    return result;\n  }, []);\n\n  const pointsDataSet = {\n    columns: ['X', 'Y'],\n    data: splitedPoints\n  }\n\n  return (\n    <ExcelFile element={button}>\n      <ExcelSheet data={[results]} name=\"Results\">\n        <ExcelColumn label=\"Overal Stability Index\" value=\"osi\"/>\n        <ExcelColumn label=\"Overal Stability Desviation\" value=\"osd\"/>\n        <ExcelColumn label=\"Antero/Posterior Stability Index\" value=\"api\"/>\n        <ExcelColumn label=\"Antero/Posterior Stability Desviation\" value=\"apd\"/>\n        <ExcelColumn label=\"Medial/Lateral Stability Index\" value=\"mli\"/>\n        <ExcelColumn label=\"Medial/Lateral Stability Desviation\" value=\"mld\"/>\n        <ExcelColumn label=\"Zone Percentage A\" value=\"zpA\"/>\n        <ExcelColumn label=\"Zone Percentage B\" value=\"zpB\"/>\n        <ExcelColumn label=\"Zone Percentage C\" value=\"zpC\"/>\n        <ExcelColumn label=\"Zone Percentage D\" value=\"zpD\"/>\n        <ExcelColumn label=\"Quadrant Percentage I\" value=\"qpI\"/>\n        <ExcelColumn label=\"Quadrant Percentage II\" value=\"qpII\"/>\n        <ExcelColumn label=\"Quadrant Percentage III\" value=\"qpIII\"/>\n        <ExcelColumn label=\"Quadrant Percentage IV\" value=\"qpIV\"/>\n\n      </ExcelSheet>\n      <ExcelSheet dataSet={[pointsDataSet]} name=\"Points\" />\n    </ExcelFile>\n  );\n}\n\nexport default Download\n","import React from 'react'\nimport { Button, Modal } from 'semantic-ui-react'\nimport localForage from 'localforage';\n\nimport Radar from '../Radar';\nimport Download from './ExcelExport';\n\nasync function savePoints(points) {\n  try {\n    const savedPoints = await localForage.getItem('points') || []\n    await localForage.setItem('points', [...savedPoints, {\n      date: new Date(),\n      points,\n    }]);\n    alert('Saved!');\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction getOveralStabilityIndex(points) {\n  // points = [x1,y1,x2,y2,...]\n  const { x, y } = points.reduce((acc, value, index) => {\n    return index % 2\n      ? {\n          x: acc.x,\n          y: acc.y + Math.pow(0-parseFloat(value), 2)\n        }\n      : {\n          x: acc.x + Math.pow(0-parseFloat(value), 2),\n          y: acc.y\n        }\n    }, {x:0, y:0});\n  return Math.sqrt((x+y)/(points.length/2)).toPrecision(5) // points.length/2 = number of samples, sample = x1,y1\n}\n\nfunction getOveralStabilityDesviation(points) {\n  // points = [x1,y1,x2,y2,...]\n  const magnitudeArr = points.reduce((acc, value, index, arr) => {\n    return index % 2\n      ? [...acc, Math.sqrt(Math.pow(arr[index-1],2)+Math.pow(arr[index],2))]\n      : acc\n    }, []);\n  const magnitudeSum = magnitudeArr.reduce((acc, value) => acc + value, 0);\n  const meanDeflection = magnitudeSum / magnitudeArr.length;\n  const desviationSum = magnitudeArr.reduce((acc, value) => acc + Math.sqrt(Math.pow(value - meanDeflection, 2)), 0);\n  return parseFloat(desviationSum / magnitudeArr.length).toPrecision(5);\n}\n\nfunction getPosteriorStabilityIndex(points) {\n  // points = [x1,y1,x2,y2,...]\n  const y = points.reduce((acc, value, index) => index % 2 ? acc + Math.pow(0 - parseFloat(value), 2) : acc, 0);\n  return Math.sqrt(y/(points.length/2)).toPrecision(5) // points.length/2 = number of samples, sample = x1,y1\n}\n\nfunction getPosteriorStabilityDesviation(points) {\n  // points = [x1,y1,x2,y2,...]\n  const meanSum = points.reduce((acc, value, index) => index % 2 ? acc + parseFloat(value) : acc, 0);\n  const meanDeflection = meanSum / (points.length / 2);\n  const desviationSum = points.reduce((acc, value, index) => index % 2 ? acc + Math.sqrt(Math.pow(parseFloat(value) - meanDeflection, 2)) : acc, 0);\n  return parseFloat(desviationSum/(points.length/2)).toPrecision(5) // points.length/2 = number of samples, sample = x1,y1\n}\n\nfunction getLateralStabilityIndex(points) {\n  // points = [x1,y1,x2,y2,...]\n  const x = points.reduce((acc, value, index) => index % 2 ? acc : acc + Math.pow(0 - parseFloat(value), 2), 0);\n  return Math.sqrt(x/(points.length/2)).toPrecision(5) // points.length/2 = number of samples, sample = x1,y1\n}\n\nfunction getLateralStabilityDesviation(points) {\n  // points = [x1,y1,x2,y2,...]\n  const meanSum = points.reduce((acc, value, index) => index % 2 ? acc : acc + parseFloat(value), 0);\n  const meanDeflection = meanSum / (points.length / 2);\n  const desviationSum = points.reduce((acc, value, index) => index % 2 ? acc : acc + Math.sqrt(Math.pow(parseFloat(value)-meanDeflection, 2)), 0);\n  return parseFloat(desviationSum/(points.length/2)).toPrecision(5) // points.length/2 = number of samples, sample = x1,y1\n}\n\nfunction getZonePercentage(points, maxTilt) {\n  const pointsPerZone = points.reduce((acc, value, index, arr) => {\n    if (!(index % 2)) return acc;\n    const magnitude = Math.sqrt(Math.pow(arr[index-1], 2) + Math.pow(arr[index], 2));\n    if (magnitude <= maxTilt/4) return Object.assign(acc, { a: acc.a + 1 });\n    if (magnitude <= (maxTilt/4)*2) return Object.assign(acc, { b: acc.b + 1 });\n    if (magnitude <= (maxTilt/4)*3) return Object.assign(acc, { c: acc.c + 1 });\n    return Object.assign(acc, { d: acc.d + 1 });\n  }, {a:0,b:0,c:0,d:0});\n\n  return {\n    a: parseFloat((pointsPerZone.a*100)/(points.length/2)).toPrecision(3),\n    b: parseFloat((pointsPerZone.b*100)/(points.length/2)).toPrecision(3),\n    c: parseFloat((pointsPerZone.c*100)/(points.length/2)).toPrecision(3),\n    d: parseFloat((pointsPerZone.d*100)/(points.length/2)).toPrecision(3)\n  }\n}\n\nfunction getQuadrantPercentage(points) {\n  const pointsPerQuadrant = points.reduce((acc, value, index, arr) => {\n    if (!(index % 2)) return acc;\n    if (arr[index-1] < 0 && arr[index] < 0) return Object.assign(acc, { a: acc.a + 1 });\n    if (arr[index-1] > 0 && arr[index] < 0) return Object.assign(acc, { b: acc.b + 1 });\n    if (arr[index-1] < 0 && arr[index] > 0) return Object.assign(acc, { c: acc.c + 1 });\n    return Object.assign(acc, { d: acc.d + 1 });\n  }, {a:0,b:0,c:0,d:0});\n\n  return {\n    a: parseFloat((pointsPerQuadrant.a*100)/(points.length/2)).toPrecision(3),\n    b: parseFloat((pointsPerQuadrant.b*100)/(points.length/2)).toPrecision(3),\n    c: parseFloat((pointsPerQuadrant.c*100)/(points.length/2)).toPrecision(3),\n    d: parseFloat((pointsPerQuadrant.d*100)/(points.length/2)).toPrecision(3)\n  }\n}\n\nfunction Results({points, maxTilt, close}) {\n  const zonePercentage = getZonePercentage(points, maxTilt);\n  const quadrantPercentage = getQuadrantPercentage(points);\n  const results = {\n    osi: getOveralStabilityIndex(points),\n    osd: getOveralStabilityDesviation(points),\n    api: getPosteriorStabilityIndex(points),\n    apd: getPosteriorStabilityDesviation(points),\n    mli: getLateralStabilityIndex(points),\n    mld: getLateralStabilityDesviation(points),\n    zpA: zonePercentage.a,\n    zpB: zonePercentage.b,\n    zpC: zonePercentage.c,\n    zpD: zonePercentage.d,\n    qpI: quadrantPercentage.a,\n    qpII: quadrantPercentage.b,\n    qpIII: quadrantPercentage.c,\n    qpIV: quadrantPercentage.d\n  }\n  return (\n    <Modal\n      onClose={() => close()}\n      defaultOpen\n    >\n      <Modal.Header>Results</Modal.Header>\n      <Modal.Content image>\n        <Radar\n          pointerX={points[points.length - 2]}\n          pointerY={points[points.length - 1]}\n          points={points}\n          size={Math.min(window.innerHeight, window.innerWidth)/2}\n          maxTilt={maxTilt}\n          />\n      </Modal.Content>\n      <Modal.Description>\n        <p>Overal Stability Index: {results.osi}</p>\n        <p>Overal Stability Desviation: {results.osd}</p>\n        <p>Antero/Posterior Stability Index: {results.api}</p>\n        <p>Antero/Posterior Stability Desviation: {results.apd}</p>\n        <p>Medial/Lateral Stability Index: {results.mli}</p>\n        <p>Medial/Lateral Stability Desviation: {results.mld}</p>\n        <p>Zone Percentage: A{zonePercentage.a}% B{zonePercentage.b}% C{zonePercentage.c}% D{zonePercentage.d}%</p>\n        <p>Quadrant Percentage: I{quadrantPercentage.a}% II{quadrantPercentage.b}% III{quadrantPercentage.c}% IV{quadrantPercentage.d}%</p>\n      </Modal.Description>\n      <Modal.Actions>\n        <Download results={results} points={points} button={<Button> Export </Button>}/>\n        <Button color='black' onClick={() => close()}>\n          Close\n        </Button>\n        <Button\n          content='Save'\n          labelPosition='right'\n          icon='save'\n          onClick={() => savePoints(points)}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nexport default Results\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport Peer from 'simple-peer';\nimport { Button, Container, Input } from 'semantic-ui-react';\nimport QrReader from 'react-qr-reader'\nimport axios from 'axios';\n\nimport Radar from '../Radar';\nimport Results from '../Results';\n\nclass Device extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      answer: '',\n      data: '',\n      dataToSend: '',\n      qrData: '',\n      orientation: {\n        x: 0,\n        y: 0\n      },\n      cob: {\n        x: 0,\n        y: 0,\n      },\n      points: [],\n      measureFrequency: 50,\n      timerCount: 20,\n      maxTilt: 20,\n      showQRScanner: false,\n      showResults: false,\n      isConnectedToHUD: false,\n      isRunningMeasure: false,\n    }\n  }\n\n  radarSize = Math.min(window.innerHeight, window.innerWidth);\n\n  measureInterval = null;\n\n  getPointer = event => {\n    const { beta, gamma } = event;\n    const x = parseFloat(gamma).toPrecision(5);\n    const y = parseFloat(beta).toPrecision(5);\n    if (x && y) {\n      this.setState({\n        orientation: {\n          x: parseFloat(x - this.state.cob.x).toPrecision(5),\n          y: parseFloat(y - this.state.cob.y).toPrecision(5)\n        }\n      })\n    }\n  }\n\n  handleGetCenterOfBalance = () => {\n    this.setState({ points: [], cob: { x: 0, y: 0 } })\n    const interval = setInterval(() => {\n      this.setState({\n        points: [...this.state.points, this.state.orientation.x, this.state.orientation.y]\n      })\n    }, parseInt(1000/this.state.measureFrequency));\n    setTimeout(() => {\n      clearInterval(interval);\n      this.getCenterOfBalance();\n    }, 3000);\n  }\n\n  getCenterOfBalance = () => {\n    const { x, y } = this.state.points.reduce((acc, value, index) => {\n      return index % 2\n        ? {\n            x: acc.x,\n            y: acc.y + parseFloat(value)\n          }\n        : {\n            x: acc.x + parseFloat(value),\n            y: acc.y\n          }\n      }, {x:0, y:0});\n    const cob = {\n      x: parseFloat(x/(this.state.points.length/2)).toPrecision(5),\n      y: parseFloat(y/(this.state.points.length/2)).toPrecision(5),\n    }\n    this.setState({\n      cob,\n      points: []\n    })\n  }\n\n  componentDidMount() {\n    window.addEventListener('deviceorientation', this.getPointer, true);\n  }\n\n  componentDidUpdate() {\n    if(this.state.isConnectedToHUD) {\n      this.peer.send(JSON.stringify(this.state))\n    }\n  }\n\n  handleError = err => {\n    console.error(err)\n  }\n\n  handleStartMeasure = () => {\n    this.setState({ isRunningMeasure: true })\n    if (parseInt(this.state.timerCount) > 0) {\n      const initialTimer = this.state.timerCount;\n      const counterInterval = setInterval(() => {\n        this.setState({ timerCount: this.state.timerCount - 1 })\n        if (this.state.timerCount <= 0) {\n          this.handleStopMeasure();\n          this.setState({ timerCount: initialTimer })\n          clearInterval(counterInterval);\n        }\n      }, 1000);\n    }\n    this.measureInterval = setInterval(() => {\n      this.setState({\n        points: [...this.state.points, this.state.orientation.x, this.state.orientation.y]\n      })\n    }, parseInt(1000/this.state.measureFrequency));\n  }\n\n  handleStopMeasure = () => {\n    clearInterval(this.measureInterval);\n    this.setState({ isRunningMeasure: false, showResults: true })\n  }\n\n  handleClearMeasure = () => this.setState({ points: [] })\n\n  handleGetMaxTilt = () => {\n    this.setState({ maxTilt: 0 });\n    window.addEventListener('deviceorientation', this.getMaxTilt, true);\n    setTimeout(() => window.removeEventListener('deviceorientation', this.getMaxTilt, true), 5000);\n  }\n\n  getMaxTilt = event => {\n    const { beta, gamma } = event;\n    const x = parseFloat(gamma).toPrecision(5);\n    const y = parseFloat(beta).toPrecision(5);\n    this.setState({ maxTilt: Math.max(this.state.maxTilt, Math.sqrt(x*x+y*y)) });\n  }\n\n  handleChangeSeconds = e => this.setState({ timerCount: e.target.value });\n\n  handleShowQRScanner = () => {\n    this.peer = new Peer({\n      trickle: false\n    });\n\n    this.peer.on('error', err => console.log('error', err))\n\n    this.peer.on('signal', async data => {\n      console.log('SIGNAL', JSON.stringify(data))\n      const res = await axios.post(this.state.qrData, data);\n      this.setState({ answer: res.data })\n    })\n\n    this.peer.on('connect', () => {\n      console.log('CONNECT');\n      this.setState({isConnectedToHUD: true});\n    })\n\n    this.peer.on('close', () => {\n      console.log('DISCONNECT');\n      this.setState({isConnectedToHUD: false});\n    })\n\n    this.peer.on('data', data => {\n      const dataJson = JSON.parse(data.toString());\n      switch (dataJson.run) {\n        case 'startMeasure':\n          this.handleStartMeasure();\n          break;\n        case 'stopMeasure':\n          this.handleStopMeasure();\n          break;\n        case 'getMaxTilt':\n          this.handleGetMaxTilt();\n          break;\n        case 'clearMeasure':\n          this.handleClearMeasure();\n          break;\n        case 'getCoB':\n          this.handleGetCenterOfBalance();\n          break;\n        case 'changeTimer':\n          this.setState({timerCount: dataJson.runValue})\n          break;\n        case 'closeResults':\n          this.setState({showResults: false})\n          break;\n        default:\n          break;\n      }\n    })\n\n    this.setState({ showQRScanner: true });\n  }\n\n  handleScan = async data => {\n    if(data) {\n      this.setState({\n        qrData: data,\n        showQRScanner: false\n      })\n      const res = await axios(data);\n      this.peer.signal(res.data.offer);\n    }\n  }\n\n  handleConnectToDevice = () => this.props.history.push('/screen');\n\n  render() {\n    return (\n      <div>\n      { this.state.showQRScanner && <QrReader\n        delay={300}\n        onError={this.handleError}\n        onScan={this.handleScan}\n        style={{ width: '100%' }}\n        /> }\n        <Radar\n          pointerX={this.state.orientation.x}\n          pointerY={this.state.orientation.y}\n          points={this.state.points}\n          size={this.radarSize}\n          maxTilt={this.state.maxTilt} />\n        <Container textAlign='center'>\n          { this.state.isRunningMeasure\n            ? <Button fluid color='red' onClick={this.handleStopMeasure}>Stop measure</Button>\n            : <Button fluid color='green' onClick={this.handleStartMeasure}>Start measure</Button>}\n          <Button fluid color='orange' onClick={this.handleGetCenterOfBalance}>Get CoB</Button>\n          <Button onClick={() => this.props.history.push('/list')}>List Results</Button>\n          <Button onClick={this.handleGetMaxTilt}>Get max tilt</Button>\n          <Button onClick={this.handleClearMeasure}>Clear measure</Button>\n          <Input placeholder='Time in seconds' onChange={this.handleChangeSeconds} />\n          <Button onClick={this.handleShowQRScanner}>Connect with screen</Button>\n          <Button onClick={this.handleConnectToDevice}>Connect with device</Button>\n          {this.state.timerCount} <br />\n          {this.state.orientation.x} <br />\n          {this.state.orientation.y} <br />\n          {this.state.qrData} <br />\n          {this.state.data} <br />\n          {this.state.maxTilt} <br />\n        </Container>\n        {this.state.showResults &&\n          <Results\n            close={() => this.setState({showResults: false, points: [] })}\n            points={this.state.points}\n            maxTilt={this.state.maxTilt}\n            />}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Device);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport Peer from 'simple-peer';\nimport { Container, Button, Input } from 'semantic-ui-react';\nimport QRCode from 'qrcode.react';\nimport axios from 'axios';\n\nimport Radar from '../Radar';\nimport Results from '../Results';\n\nconst apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:3000'\n\nclass Screen extends React.Component {\n  constructor(props) {\n    super()\n    this.state = {\n      answer: '',\n      offer: '',\n      data: '',\n      dataToSend: '',\n      qrData: '',\n      orientation: {\n        x: 0,\n        y: 0\n      },\n      points: [],\n      measureFrequency: 50,\n      timerCount: 0,\n      showQRScanner: false,\n      showResults: false,\n      isConnectedToDevice: false,\n      isConnectedToHUD: false,\n      isRunningMeasure: false,\n      maxTilt: 45,\n    }\n    this.radarSize = Math.min(window.innerHeight, window.innerWidth);\n  }\n\n  componentDidMount() {\n    this.handleConnectToDevice();\n  }\n\n  handleConnectToDevice = () => {\n    this.peer = new Peer({\n      initiator: true,\n      trickle: false\n    });\n\n    this.peer.on('error', err => console.log('error', err))\n\n    this.peer.on('signal', async data => {\n      console.log('SIGNAL', JSON.stringify(data))\n      const res = await axios.post(apiUrl, data);\n      console.log('SIGNAL', JSON.stringify(res));\n      this.setState({ offer: res.data });\n      this.getServerAnswer();\n    })\n\n    this.peer.on('connect', () => {\n      console.log('CONNECT')\n      this.setState({ isConnectedToDevice: true })\n    })\n\n    this.peer.on('close', () => {\n      console.log('DISCONNECT')\n      this.setState({ isConnectedToDevice: false })\n      this.handleConnectToDevice();\n    })\n\n    this.peer.on('data', dataReceived => {\n      this.setState(JSON.parse(dataReceived.toString()));\n    });\n  }\n\n  getServerAnswer = async () => {\n    console.log('Getting');\n    const res = await axios(this.state.offer);\n    res.data && res.data.answer ?\n      this.peer.signal(res.data.answer) :\n      setTimeout(() => this.getServerAnswer(), 1000);\n  }\n\n  handleSendRun(option, value) {\n    this.peer.send(JSON.stringify({ run: option, runValue: value }));\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.offer && <div> Generating data to sync... </div>}\n        {this.state.offer && !this.state.isConnectedToDevice && <Container><QRCode value={this.state.offer} includeMargin/></Container>}\n        {this.state.isConnectedToDevice &&\n          <div>\n            <Radar\n              pointerX={this.state.orientation.x}\n              pointerY={this.state.orientation.y}\n              points={this.state.points}\n              size={this.radarSize}\n              maxTilt={this.state.maxTilt} />\n\n            <Container textAlign='center'>\n              { this.state.isRunningMeasure\n                ? <Button fluid color='red' onClick={() => this.handleSendRun('stopMeasure')}>Stop measure</Button>\n                : <Button fluid color='green' onClick={() => this.handleSendRun('startMeasure')}>Start measure</Button>\n              }\n              <Button fluid color='orange' onClick={() => this.handleSendRun('getCoB')}>Get CoB</Button>\n              <Button onClick={() => this.props.history.push('/list')}>List Results</Button>\n              <Button onClick={() => this.handleSendRun('getMaxTilt')}>Get max tilt</Button>\n              <Button onClick={() => this.handleSendRun('clearMeasure')}>Clear measure</Button>\n              <Input placeholder='Time in seconds' onChange={e => this.handleSendRun('changeTimer', e.target.value)} />\n              <Button onClick={() => this.props.history.push('/')}>Connect with screen</Button>\n              {this.state.timerCount} <br />\n              {this.state.orientation.x} <br />\n              {this.state.orientation.y} <br />\n              {this.state.qrData} <br />\n              {this.state.maxTilt} <br />\n            </Container>\n            {this.state.showResults &&\n          <Results\n            close={() => this.handleSendRun('closeResults')}\n            points={this.state.points}\n            maxTilt={this.state.maxTilt}\n            />}\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Screen);\n","import React, { useState, useEffect } from 'react';\nimport { List, Button } from 'semantic-ui-react';\nimport localForage from 'localforage';\n\nimport Results from '../Results';\n\nfunction ResultList() {\n  const [items, setItems] = useState([]);\n  const [points, setPoints] = useState(null);\n\n  useEffect(() => {\n    localForage.getItem('points').then(data => setItems(data.map(e =>\n      <List.Item>\n        <List.Content>\n          <List.Header>{e.date.toLocaleString('en-GB')}</List.Header>\n        </List.Content>\n        <List.Content floated='right'>\n          <Button icon='eye' onClick={()=> setPoints(e.points)}/>\n        </List.Content>\n      </List.Item>\n    )))\n  }, []);\n\n  return(<div>\n    <List celled>\n      { items }\n    </List>\n    { points &&\n      <Results\n      close={() => setPoints(null)}\n      points={points}\n      maxTilt={20}\n      />}\n  </div>)\n}\n\nexport default ResultList\n","import React from 'react';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\n\nimport Device from './components/Device';\nimport Screen from './components/Screen';\nimport List from './components/List';\n\nexport default function App() {\n  return(\n    <HashRouter>\n      <Switch>\n        <Route path=\"/list\">\n          <List />\n        </Route>\n        <Route path=\"/screen\">\n          <Screen />\n        </Route>\n        <Route path=\"/\">\n          <Device />\n        </Route>\n      </Switch>\n    </HashRouter>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nconst rootEl = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootEl\n);\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default\n    ReactDOM.render(\n      <NextApp />,\n      rootEl\n    )\n  })\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}